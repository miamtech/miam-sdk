"use strict";(self.webpackChunkmiam_sdk_doc=self.webpackChunkmiam_sdk_doc||[]).push([[81],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>k});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),m=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=m(e.components);return a.createElement(p.Provider,{value:t},e.children)},s="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,p=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),s=m(n),u=r,k=s["".concat(p,".").concat(u)]||s[u]||c[u]||o;return n?a.createElement(k,i(i({ref:t},d),{},{components:n})):a.createElement(k,i({ref:t},d))}));function k(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=u;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[s]="string"==typeof e?e:r,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},1696:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>p,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>m});var a=n(7462),r=(n(7294),n(3905));const o={},i="Styling",l={unversionedId:"android/usage/styling",id:"android/usage/styling",title:"Styling",description:"This SDK lets you adjust the components styling so they can be naturally inserted in your app",source:"@site/docs/android/usage/styling.md",sourceDirName:"android/usage",slug:"/android/usage/styling",permalink:"/docs/android/usage/styling",draft:!1,tags:[],version:"current",frontMatter:{},sidebar:"androidSidebar",previous:{title:"Components injection",permalink:"/docs/android/usage/component-injection"},next:{title:"Advanced feature",permalink:"/docs/category/advanced-feature"}},p={},m=[{value:"Overriding style properties",id:"overriding-style-properties",level:2},{value:"Colors",id:"colors",level:3},{value:"Wording",id:"wording",level:3},{value:"Typography",id:"typography",level:3},{value:"Icons / Images",id:"icons--images",level:3},{value:"Dimensions",id:"dimensions",level:3},{value:"Templating",id:"templating",level:2}],d={toc:m},s="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(s,(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"styling"},"Styling"),(0,r.kt)("p",null,"This SDK lets you adjust the components styling so they can be naturally inserted in your app\nwithout confusing the end user."),(0,r.kt)("p",null,"Components styling can be customized by either:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Passing a whole template and mapping it to the controller inputs/outputs"),(0,r.kt)("li",{parentName:"ul"},"Overriding the style properties")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"A combination of both ways can be used. Note that in this case, the default style variables won't be taken into account")),(0,r.kt)("h2",{id:"overriding-style-properties"},"Overriding style properties"),(0,r.kt)("p",null,"You can globally customize styles by overiding some classes it will be applied to all components.\nThere severale type of properi that can be override ",(0,r.kt)("strong",{parentName:"p"},"Colors"),", ",(0,r.kt)("strong",{parentName:"p"},"Wording"),", ",(0,r.kt)("strong",{parentName:"p"},"Typography"),", ",(0,r.kt)("strong",{parentName:"p"},"Icons / Images")," and ",(0,r.kt)("strong",{parentName:"p"},"Dimentions")),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},"Component styling overrides global styling"),(0,r.kt)("li",{parentName:"ul"},"Properties that aren't overriden  will keep their default values\ndefined by Miam in the SDK\n:::"))),(0,r.kt)("p",null,"Components injected using Jetpack or XML can both have their styling customized the same way\n:::"),(0,r.kt)("h3",{id:"colors"},"Colors"),(0,r.kt)("p",null,"Here is how to override a color variable globally:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"import com.miam.kmm_miam_sdk.android.theme.Colors\n\n// Colors object is defined in SDK\nColors.primary = Color(0xFF44D6B3)\n")),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"}," ",(0,r.kt)("inlineCode",{parentName:"p"},"0x")," means hexa , ",(0,r.kt)("inlineCode",{parentName:"p"},"FF")," stands for opacity , ",(0,r.kt)("inlineCode",{parentName:"p"},"44D6B3")," is the color code")),(0,r.kt)("p",null,"List of colors you can override:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,r.kt)("th",{parentName:"tr",align:"center"},"Default value"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"primary"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#037E92"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"secondary"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#209B8F"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"ternary"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#E61845"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"success"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#44D6B3"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"info"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#44D6B3"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"warning"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#FFDAA3"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"danger"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#F47F7A"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"grey"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#676767"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"white"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#FAFCFE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"unpureWhite"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#FEFEFE"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:"left"},"black"),(0,r.kt)("td",{parentName:"tr",align:"center"},(0,r.kt)("inlineCode",{parentName:"td"},"#252525"))))),(0,r.kt)("h3",{id:"wording"},"Wording"),(0,r.kt)("p",null,"All wordings are injected using Miam ",(0,r.kt)("inlineCode",{parentName:"p"},"Text")," objects, which can be overriden globally as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'import com.miam.kmm_miam_sdk.android.ressource.Text\n\nText.alreadyInCart = "ajout\xe9e"\n')),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"},"The full list of customizable wordings can be found in file: ",(0,r.kt)("inlineCode",{parentName:"p"},"androidSDK/src/main/ressource/text.kt"))),(0,r.kt)("h3",{id:"typography"},"Typography"),(0,r.kt)("p",null,"All font use across SDK are defined here they can be override globaly\nin ",(0,r.kt)("inlineCode",{parentName:"p"},"androidSDK/src/main/theme/typography.kt")," or in lower level Our typography are of\ntype ",(0,r.kt)("a",{target:"https://www.jetpackcompose.net/textstyle-in-jetpack-compose",href:"https://www.jetpackcompose.net/textstyle-in-jetpack-compose"}," ",(0,r.kt)("strong",{parentName:"p"},"TextStyle")," ")," "),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"import com.miam.kmm_miam_sdk.android.theme.Typography\n\ntypography.h1 = TextStyle(\n    color = Color.Red,\n    fontSize = 16.sp,\n    fontFamily = FontFamily.Monospace,\n    fontWeight = FontWeight.W800,\n    fontStyle = FontStyle.Italic,\n    letterSpacing = 0.5.em,\n    background = Color.LightGray,\n    textDecoration = TextDecoration.Underline\n)\n")),(0,r.kt)("h3",{id:"icons--images"},"Icons / Images"),(0,r.kt)("p",null,"All icons and images are injected using Miam ",(0,r.kt)("inlineCode",{parentName:"p"},"Image")," objects, which can be overriden globally or\ncomponent by component as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"import com.miam.kmm_miam_sdk.android.ressource.Image\n\nImage.basketIcon = R.drawable.your_basket_icon\n")),(0,r.kt)("h3",{id:"dimensions"},"Dimensions"),(0,r.kt)("p",null,"All padding, width or height are injected using Miam ",(0,r.kt)("inlineCode",{parentName:"p"},"Dimension")," object, which can be overriden\nglobally or component by component as follows:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"import com.miam.kmm_miam_sdk.android.theme.Dimension\n\nDimension.xlPadding = 40.dp\n")),(0,r.kt)("h2",{id:"templating"},"Templating"),(0,r.kt)("p",null,"All components avalaible for template customization can be found in ",(0,r.kt)("inlineCode",{parentName:"p"},"theme/template.kt")),(0,r.kt)("p",null,"In there you'll find a unique object with overridable property.\nYou'll only have to pass a new value to one of those property to override a view."),(0,r.kt)("admonition",{type:"tip"},(0,r.kt)("p",{parentName:"admonition"},"Our components are statefull:\nfor example :"),(0,r.kt)("ul",{parentName:"admonition"},(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"recipeCardTemplate")," ",(0,r.kt)("em",{parentName:"li"},"when view is succesfully loaded")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("strong",{parentName:"li"},"recipeLoaderTemplate")," ",(0,r.kt)("em",{parentName:"li"},"when view is loading"))),(0,r.kt)("p",{parentName:"admonition"},"That means that you can also overring only a state")),(0,r.kt)("p",null,"Here is an example of overriding ",(0,r.kt)("strong",{parentName:"p"},"recipeCardTemplate")," :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},'  // def of your new template\nprivate val recipeFunctionTemplateVariable: @Composable (recipe: Recipe, vmRecipe: RecipeViewModel, look: () -> Unit, buy: () -> Unit) -> Unit =\n    { recipe: Recipe, vmRecipe: RecipeViewModel, look: () -> Unit, buy: () -> Unit ->\n        Column {\n            Clickable(onClick = look) {\n                    Image(\n                        painter = rememberImagePainter(recipe.attributes.mediaUrl),\n                        contentDescription = null,\n                        contentScale = ContentScale.Crop,\n                        modifier = Modifier\n                            .height(150.dp)\n                            .clip(RoundedCornerShape(10.dp))\n                    )\n              }\n            Row(Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.SpaceEvenly) {\n                Icon(\n                    tint = Color.Gray,\n                    imageVector = Icons.Default.Schedule,\n                    contentDescription = "time"\n                )\n                Text(text = recipe.totalTime)\n                Icon(\n                    tint = Color.Gray,\n                    imageVector = Icons.Default.Person,\n                    contentDescription = "person"\n                )\n                Text(text = recipe.attributes.numberOfGuests.toString())\n                Icon(\n                    tint = Color.Gray,\n                    imageVector = Icons.Default.School,\n                    contentDescription = "hat"\n                )\n                Text(text = "Difficult\xe9  ${recipe.difficultyLabel}")\n            }\n            Row(Modifier.fillMaxWidth(), horizontalArrangement = Arrangement.Center) {\n                Text(\n                    text = recipe.attributes.title,\n                    fontSize = 20.sp,\n                    fontWeight = FontWeight.Bold\n                )\n            }\n        }\n    }\n')),(0,r.kt)("p",null,"You'll have to map in you view implementation property that you'll have in ",(0,r.kt)("inlineCode",{parentName:"p"},"@Compose")," function signature"),(0,r.kt)("admonition",{type:"note"},(0,r.kt)("p",{parentName:"admonition"},"You can use what of the exposed poperty that will depend on your special needs")),(0,r.kt)("p",null,"Then You just need to pass this ",(0,r.kt)("inlineCode",{parentName:"p"},"val")," into our template holder :"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kotlin"},"Template.recipeCardTemplate = recipeFunctionTemplateVariable\n")),(0,r.kt)("admonition",{type:"info"},(0,r.kt)("p",{parentName:"admonition"}," As Compose doesn't support yet passing reference of a ",(0,r.kt)("inlineCode",{parentName:"p"},"@Compose")," function we have to pass it through a variable")))}c.isMDXComponent=!0}}]);